syntax = "proto3";
package srdtrk.linkedpackets.v1;

option go_package = "github.com/srdtrk/linkedpackets";

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";

// Params defines the parameters of the module.
message Params { option (amino.name) = "srdtrk/linkedpackets/Params"; }

// Metadata defines the linked-packets specific metadata encoded into the channel version bytestring
// See ICS004: https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#Versioning
message Metadata {
  // linked_packets_version defines the linked-packets version
  string linked_packets_version = 1;
  // app_version defines the underlying application version, which may or may not be a JSON encoded bytestring
  string app_version = 2;
}

// Counter defines a counter object.
// It is used only for genesis purposes. Collections does not need to use it.
message Counter { 
  option (amino.name) = "srdtrk/linkedpackets/Counter"; 

  // count defines the count of the counter.
  uint64 count = 1;

  // address defines the address that is associated with the count.
  string address = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  ;
}

// GenesisState is the state that must be provided at genesis.
message GenesisState {
  // counter defines the counter object.
  repeated Counter counters = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // params defines all the parameters of the module.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// PacketIdentifier is the identifier for a packet.
message PacketIdentifier {
  string port_id = 1;
  string channel_id = 2;
  string seq = 3;
}
